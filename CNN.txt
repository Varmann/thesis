def forward(self, x):
		# pass the input through our first set of CONV => RELU =>
		# POOL layers
        x = self.conv1(x)
        x = self.relu1(x)
        x = self.maxpool1(x)
                
		# pass the output from the previous layer through the second
		# set of CONV => RELU => POOL layers
        x = self.conv2(x)
        x = self.relu2(x)
        x = self.maxpool2(x)
                
		# flatten the output from the previous layer and pass it
		# through our only set of FC => RELU layers
        x = flatten(x, 1)
        x = self.fc1(x)
        x = self.relu3(x)
                
		# pass the output to our softmax classifier to get our output
		# predictions
        x = self.fc2(x)
        output = self.logSoftmax(x)
		# return the output predictions
        return output


def forward(self, x):
		# pass the input through our first set of CONV => RELU =>
		# POOL layers
        print("Input Shape : ",x.shape)
        x = self.conv1(x)
        print("Conv1 : ",x.shape)
        x = self.relu1(x)
        print("Relu1 : ",x.shape)
        x = self.maxpool1(x)
        print("Maxpool1 : ",x.shape)
                
		# pass the output from the previous layer through the second
		# set of CONV => RELU => POOL layers
        x = self.conv2(x)
        print("Conv2 : ",x.shape)
        x = self.relu2(x)
        print("Relu2 : ",x.shape)
        x = self.maxpool2(x)
        print("Maxpool2 : ",x.shape)
                
		# flatten the output from the previous layer and pass it
		# through our only set of FC => RELU layers
        x = flatten(x, 1)
        print("flatten : ",x.shape)
        x = self.fc1(x)
        print("fc1 linear : ",x.shape)
        x = self.relu3(x)
        print("Relu3 : ",x.shape)
                
		# pass the output to our softmax classifier to get our output
		# predictions
        x = self.fc2(x)
        print("fc2 linear : ",x.shape)
        output = self.logSoftmax(x)
		# return the output predictions
        time.sleep(1000)
        return output